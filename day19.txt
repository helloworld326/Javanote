Exception处理：
	1.try...catch...finally
	2.throws
	3.throw:抛出的是异常的对象而不是类名;

	note:
		1.try里面的代码越少越好，越多虚拟机需要更多的资源区处理;
		2.catch里面必须有内容，哪怕给出一个简单的提示;
		3.一旦try里面出了问题，就会在这里把问题抛出去，catch处理完问题后，就结束了try catch语句;
		4.异常名能明确的尽量明确,不能明确的挂Exception,父级异常不能放前面;
		5.尽量不要再main方法中抛出异常;

	JDK7新特性：
		try{

		}catch(异常名1 | 异常名2 | ...变量){

		}

	异常的几个常见方法：
		1.public String getMessage():异常的消息字符串;
		2.public String toString():返回异常的简单信息描述;

面试题：
	throw和throws的区别：
		1.throw:在方法体内，跟的是异常对象类名，只能抛出一个对象，表示抛出异常，由方法体内的语句处理，
				throw抛出了异常，执行throw一定抛出某种异常;
		2.throws:用在方法声明后面，跟你的是异常类名，可以跟多个异常名，用逗号隔开，
				表示抛出异常由该方法的调用者来处理，表示出现异常的可能性，并不代表一定会产生异常

	异常处理使用原则：
		如果该功能内部可以将问题处理，用try，如果不能，交由调用者，用throws

finally:所控制的语句体一定会执行;
	note:如果执行finally之前，jvm退出了，finally语句就不执行了;return不行;
	作用：用于释放资源,在IO流操作和数据库操作中会见到;

面试题：
	1.final、finally和finalize区别：
	(1)final:修饰类，不能被继承，
			修饰变量，变量是常量；
			修饰方法，不能被重写；
	(2)finally:处理异常，一般来说该语句一定被执行
	(3)finalize:Object类的方法，用于垃圾回收;

	2.如果catch里面有return语句，finally还会执行吗？如果会，请问是在return前还是return后？
		会，前；在catch中，遇到return先跳过，然后再回来执行return语句;

			public static int fun() {
			int a = 10;
			try {
				System.out.println(a / 0);
			} catch (Exception e) {
				a = 30;
				return a;
			} finally {
				a = 40;
			}
			return a;
			}

	3.try...catch...finally的格式变形
		(1)try...catch...finally
		(2)try...catch
		(3)try...catch...catch
		(4)try...catch...catch...finally
		(5)try...finally
			为了释放资源;

创建输出流对象做了哪些事情
	1.调用系统资源常见一个文件;
	2.创建输出流对象;
	3.把输出流对象指向文件;

相对路径：相对当前项目而言，在项目的根目录下;(路径不以盘符开始)
绝对路径：以盘符开始的;(路径以盘符开始)

close()和flush()的区别：
	1.close():先刷新缓冲区，然后通知系统释放资源;
	2.flush():刷新缓冲区,可以多次调用;

windows自带笔记本 换行符：\r\n
linux：\n
Mac:\r

异常注意事项：
	1.子类重写父类方法时，子类的方法必须抛出相同的的异常或父类异常的子类。（夫妻坏了，儿子不能比父亲更坏）
	2.如果父类抛出多个异常，子类重写父类时，只能抛出相同的异常或者是他的子集，子类不能抛出父类没有的异常。
	3.如果被重写的方法没有抛出异常，那么子类的方法绝对不能抛出异常，如果子类方法内有异常方法，那么子类只能try，不能throws

File:文件和目录(文件夹)路径名的抽象表示形式；
	File(String pathname):根据一个路径得到File对象
	File(String parent,String child):根据一个目录和一个文件/目录得到File对象;
	File(File parent,String child):根据一个父File对象和一个子文件/目录得到File对象;
	
	成员方法：
		mkdir():创建文件夹，返回boolean值，如果存在就不创建;

创建功能:
	1.public boolean createNewFile():创建文件如果存在这样的文件，就不创建；
	2.public boolean mkdir():创建文件夹 如果存在这样的文件夹，就不创建；
	3.public boolean mkdirs():创建文件夹，如果父文件夹不存在，系统会自动创建;如果存在这样的文件夹，就不创建；
	note:
		在某个目录下创建内容，该目录首先必须存在;

	4.public boolean renameTo(File dest):如果路径名相同就是改名，如果不同就是剪切;

判断功能：
	1.public boolean isDirectory():判断是否是目录;
	2.public boolean isFile():判断是否是文件;
	3.public boolean exists():判断是否存在
	4.public boolean canRead():判断是否可读
	5.public boolean canWrite():判断是否可写
	6.public boolean isHidden():判断是否隐藏

获取功能:
	1.public String getAbsolutePath():绝对路径
	2.public String getPath():相对路径
	3.public String getName():名称
	4.public long length():长度(大小)
	5.public long lastModified():最后修改时间,毫秒值;

面试题:
	1.编译期异常和运行期异常的区别？
		编译期异常 必须要处理的，否则编译不通过；
		运行期异常 可以不处理，也可以处理；
