方法重载：
	1.在同一个类中，允许存在一个以上的同名方法，只要他们的参数个数或者参数类型不同即可。
	2.JVM根据参数列表不同来识别使用哪个方法。
		参数列表不同指：
			1.参数类型不同
			2.参数个数不同

数组既可以存储基本数据类型，也可以存储引用数据类型。

java中的内存分配
	栈：存储局部变量
	堆：存储new出来的东西
	方法区：
	本地方法区：(和系统相关)
	寄存器：(给cpu使用)

局部变量：在方法定义中或者方法声明上的变量；

堆内存的特点：
	1.每一个new出来的东西都有地址值
	2.每个变量都有默认值：
		byte,short,int,long	0
		float,double,	0.0
		char	'\u0000' //空字符
		boolean	false;
		引用类型 null;
	3.使用完毕就变成垃圾，但是并没有立即回收，会在垃圾回收器空闲的时候回收。

栈内存数据用完即释放掉。

数组的静态初始化：
	格式：
		数据类型[] 数组名 = new 数组名[]{元素1，元素2，...}；
	简化格式：
		数据类型[] 数组名 = {元素1，元素2，...};
	注意事项：不要同时动态和静态进行，如：int [] arr = new int [3]{1,2,3}；//这是错误的
	数组操作的两个基本错误：
		1：ArrayIndexOutBoundsException:数组索引越界异常；即访问了不存在的索引。
		2：NullPointerException:空指针异常；即数组已经不指向堆内存了，
